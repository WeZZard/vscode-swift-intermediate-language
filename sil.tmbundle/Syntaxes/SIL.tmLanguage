<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>sil</string>
		<string>SIL</string>
	</array>
	<key>foldingStartMarker</key>
	<string>/\*\*|\{\s*$</string>
	<key>foldingStopMarker</key>
	<string>\*\*/|^\s*\}</string>
	<key>name</key>
	<string>SIL</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>match</key>
			<string>// user(s?)\: \%.+</string>
			<key>name</key>
			<string>comment.line.double-slash.sil.user</string>
		</dict>
		<dict>
			<key>match</key>
			<string>// id\: \%.+</string>
			<key>name</key>
			<string>comment.line.double-slash.sil.id</string>
		</dict>
		<dict>
			<key>match</key>
			<string>//.*</string>
			<key>name</key>
			<string>comment.line.double-slash.sil.normal</string>
		</dict>
		<dict>
			<key>match</key>
			<string>[\[\]\(\)\{\}\.\+\-\*\/\?\|]</string>
			<key>name</key>
			<string>keyword.operator.sil.operator</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Stage</string>
			<key>match</key>
			<string>\b(sil_stage|raw|canonical)\b</string>
			<key>name</key>
			<string>keyword.operator.sil.sil-stage</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Swift Attributes</string>
			<key>match</key>
			<string>\@(autoclosure|convention|noescape|escaping|differentiable|noDerivative|async|Sendable|unchecked|_typeSequence|_local|block_storage|box|dynamic_self|error|out|in|inout|inout_aliasable|in_guaranteed|in_constant|owned|unowned_inner_pointer|guaranteed|autoreleased|callee_owned|callee_guaranteed|objc_metatype|opened|pseudogeneric|yields|yield_once|yield_many|thin|thick|_opaqueReturnTypeOf|_silgen_name|available|objc|dynamicCallable|main|_exported|dynamicMemberLookup|NSCopying|IBAction|IBDesignable|IBInspectable|IBOutlet|NSManaged|LLDBDebuggerFunction|UIApplicationMain|unsafe_no_objc_tagged_pointer|inline|_semantics|_transparent|requires_stored_property_inits|nonobjc|_fixed_layout|inlinable|_specialize|objcMembers|_compilerInitialized|_hasStorage|__raw_doc_comment|unowned|_effects|__objc_bridged|NSApplicationMain|_objc_non_lazy_realization|__synthesized_protocol|testable|_alignment|rethrows|_swift_native_objc_runtime_base|warn_unqualified_access|_show_in_interface|_cdecl|usableFromInline|discardableResult|GKInspectable|_implements|_objcRuntimeName|_staticInitializeObjCMetadata|_restatedObjCConformance|_typeSequence|_optimize|_clangImporterSynthesizedType|_weakLinked|frozen|_frozen|_forbidSerializingReference|_hasInitialValue|_nonoverride|_dynamicReplacement|_borrowed|_private|_alwaysEmitIntoClient|_implementationOnly|_custom|propertyWrapper|_disfavoredOverload|resultBuilder|_projectedValueProperty|_nonEphemeral|differentiable|_hasMissingDesignatedInitializers|_inheritsConvenienceInitializers|_typeEraser|IBSegueAction|_originallyDefinedIn|derivative|_spi|transpose|noDerivative|globalActor|_specializeExtension|Sendable|_marker|reasync|_unsafeInheritExecutor|_implicitSelfCapture|_inheritActorContext|_assemblyVision|_nonSendable|_noImplicitCopy|_noLocks|_noAllocation|preconcurrency|_unavailableFromAsync|exclusivity|_backDeploy)</string>
			<key>name</key>
			<string>storage.modifier.sil.swift-attributes</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Attributes - Convention</string>
			<key>match</key>
			<string>\@(convention\((thin|think|block|c|objc_method|method|witness_method)\)|thin|thick|objc|owned|unowned|guaranteed|any|none|callee_owned|noescape|escaping|in|out|inout|in_guaranteed|in_constant|inout_aliasable|autoreleased|error|async|yeild_once|yeild_many|weak)</string>
			<key>name</key>
			<string>storage.modifier.sil.attributes.convention</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Type Sigil;</string>
			<key>match</key>
			<string>\$</string>
			<key>name</key>
			<string>storage.modifier.sil.sil-type-sigil</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Address Type Sigil;</string>
			<key>match</key>
			<string>(?&lt;=\$)\*</string>
			<key>name</key>
			<string>storage.modifier.sil.sil-address-type-sigil</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Swift Attributes</string>
			<key>match</key>
			<string>\[(canonical|ossa|transparent|thunk|signature_optimized_thunk|reabstraction_thunk|dynamically_replacable|exact_self_class|without_actually_escaping|global_init|lazy_getter|weak_imported|never|always|Onone|Ospeed|Osize|readonly|readnone|readwrite|releasenone|_semantics " [A-Za-z._0-9]+ "|_specialize " [A-Za-z._0-9]+ "|no_locks|no_allocation|forward|reverse|normal|linear|dynamic_lifetime|lexical|moved|objc|stack|tail_elems|throws|poison|lexical|initialization|assign|assign_wrapped_value|var|rootself|crossmodulerootself|derivedself|derivedselfonly|delegatingself|delegatingselfallocated|take|init|read|modify|deinit|unknown|static|dynamic|unsafe|no_nested_conflict|builtin|abort|native|keep_unique|nothrow|immutable|strict|invariant|original|jvp|vjp|transpose|no_implicit_copy|no_copy|owned|guaranteed)\]</string>
			<key>name</key>
			<string>storage.modifier.sil.sil-instruction-attributes</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Swift Attributes 2</string>
			<key>match</key>
			<string>\[tail_elems .+\]</string>
			<key>name</key>
			<string>storage.modifier.sil.sil-instruction-attributes-2</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Swift Attributes 3</string>
			<key>match</key>
			<string>\[alignment=\d+\]</string>
			<key>name</key>
			<string>storage.modifier.sil.sil-instruction-attributes-3</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Swift Attributes 4</string>
			<key>match</key>
			<string>\[parameters=[0-9]+ (' ' [0-9]+)*\]</string>
			<key>name</key>
			<string>storage.modifier.sil.sil-instruction-attributes-4</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Swift Attributes 5</string>
			<key>match</key>
			<string>\[dynamic_replacement_for \.+\]</string>
			<key>name</key>
			<string>storage.modifier.sil.sil-instruction-attributes-5</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Swift Attributes 6</string>
			<key>match</key>
			<string>\[objc_replacement_for \.+\]</string>
			<key>name</key>
			<string>storage.modifier.sil.sil-instruction-attributes-6</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Swift Attributes 7</string>
			<key>match</key>
			<string>\[available [0-9]+ ('.' [0-9]+)*]</string>
			<key>name</key>
			<string>storage.modifier.sil.sil-instruction-attributes-7</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Swift Attributes 8</string>
			<key>match</key>
			<string>\[escapes .+\]</string>
			<key>name</key>
			<string>storage.modifier.sil.sil-instruction-attributes-8</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Swift Attributes 9</string>
			<key>match</key>
			<string>\[defined_escapes .+\]</string>
			<key>name</key>
			<string>storage.modifier.sil.sil-instruction-attributes-9</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Swift Attributes 10</string>
			<key>match</key>
			<string>\[clang .+\]</string>
			<key>name</key>
			<string>storage.modifier.sil.sil-instruction-attributes-10</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Swift Attributes 11</string>
			<key>match</key>
			<string>\[(parameters|results) [0-9]+\]</string>
			<key>name</key>
			<string>storage.modifier.sil.sil-instruction-attributes-11</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Decl Subref Part</string>
			<key>match</key>
			<string>\b(sil)\b</string>
			<key>name</key>
			<string>storage.modifier.sil.function</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Decl Subref Part</string>
			<key>match</key>
			<string>\b(getter|setter|allocator|initializer|enumelt|destroyer|deallocator|globalaccessor|ivardestroyer|ivarinitializer|defaultarg\.[0-9]+)\b</string>
			<key>name</key>
			<string>storage.modifier.sil.decl-subref-part</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Decl Language</string>
			<key>match</key>
			<string>\b(foreign)\b</string>
			<key>name</key>
			<string>storage.modifier.sil.decl-lang</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Decl Language</string>
			<key>match</key>
			<string>\b(jvp|vjp)\.[SU]+\b</string>
			<key>name</key>
			<string>storage.modifier.sil.decl-autodiff-kind</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Linkage</string>
			<key>match</key>
			<string>\b(public|hidden|shared|private|public_external|hidden_external|non_abi)\b</string>
			<key>name</key>
			<string>storage.modifier.sil.linkage</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL V-Table</string>
			<key>match</key>
			<string>\b(sil_witnesstable)\b</string>
			<key>name</key>
			<string>storage.type.sil.vtable</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Witness Tables</string>
			<key>match</key>
			<string>\b(sil_witnesstable|sil_differentiability_witness|sil_default_witness_table)\b</string>
			<key>name</key>
			<string>storage.type.sil.witness-tables</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Witness Tables Modifier</string>
			<key>match</key>
			<string>\b(inherit|specialize|dependent|module|base_protocol|method|associated_type|associated_type_protocol|method)\b</string>
			<key>name</key>
			<string>storage.modifier.sil.witness-tables</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Global Variables</string>
			<key>match</key>
			<string>\b(sil_global)\b</string>
			<key>name</key>
			<string>storage.modifier.sil.global-variables</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Instructions - Allocation and Deallocation</string>
			<key>match</key>
			<string>\b(alloc_stack|alloc_ref|alloc_ref_dynamic|alloc_box|alloc_global|get_async_continuation|get_async_continuation_addr|hop_to_executor|extract_executor|dealloc_stack|dealloc_box|project_box|dealloc_stack_ref|dealloc_ref|dealloc_partial_ref)\b</string>
			<key>name</key>
			<string>support.function.sil.instruction.allocation-and-deallocation</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Instructions - Debug Information</string>
			<key>match</key>
			<string>\b(debug_value)\b</string>
			<key>name</key>
			<string>support.variable.sil.instruction.debug-information</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Instructions - Accessing Memory</string>
			<key>match</key>
			<string>\b(load|store|load_borrow|store_borrow|begin_borrow|end_borrow|end_lifetime|assign|assign_by_wrapper|mark_uninitialized|mark_function_escape|mark_uninitialized_behavior|copy_addr|destroy_addr|index_addr|tail_addr|index_raw_pointer|bind_memory|rebind_memory|begin_access|end_access|begin_unpaired_access|end_unpaired_access)\b</string>
			<key>name</key>
			<string>support.function.sil.instruction.accessing-memory</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Instructions - Reference Counting</string>
			<key>match</key>
			<string>\b(strong_retain|strong_release|set_deallocating|strong_copy_unowned_value|strong_retain_unowned|unowned_retain|unowned_release|load_weak|store_weak|load_unowned|store_unowned|fix_lifetime|mark_dependence|is_unique|begin_cow_mutation|end_cow_mutation|is_escaping_closure|copy_block|copy_block_without_escaping|builtin "unsafeGuaranteed"|builtin "unsafeGuaranteedEnd")\b</string>
			<key>name</key>
			<string>keyword.operator.sil.instruction.reference-counting</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Instructions - Literals</string>
			<key>match</key>
			<string>\b(function_ref|dynamic_function_ref|prev_dynamic_function_ref|global_addr|global_value|integer_literal|float_literal|string_literal|base_addr_for_offset)\b</string>
			<key>name</key>
			<string>support.function.sil.instruction.literals</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Instructions - Dynamic Dispatch</string>
			<key>match</key>
			<string>\b(class_method|objc_method|super_method|objc_super_method|witness_method)\b</string>
			<key>name</key>
			<string>keyword.control.sil.instruction.dynamic-dispatch</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Instructions - Function application</string>
			<key>match</key>
			<string>\b(apply|begin_apply|abort_apply|end_apply|partial_apply|builtin)\b</string>
			<key>name</key>
			<string>keyword.control.sil.instruction.function-application</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Instructions - Metatypes</string>
			<key>match</key>
			<string>\b(metatype|value_metatype|existential_metatype|objc_protocol)\b</string>
			<key>name</key>
			<string>support.class.sil.instruction.metatypes</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Instructions - Aggregate Types</string>
			<key>match</key>
			<string>\b(retain_value|retain_value_addr|unmanaged_retain_value|strong_copy_unmanaged_value|copy_value|explicit_copy_value|move_value|release_value|release_value_addr|unmanaged_release_value|destroy_value|autorelease_value|tuple|tuple_extract|tuple_element_addr|destructure_tuple|struct|struct_extract|struct_element_addr|destructure_struct|object|ref_element_addr|ref_tail_addr)\b</string>
			<key>name</key>
			<string>keyword.operator.sil.instruction.aggregate-types</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Instructions - Enums</string>
			<key>match</key>
			<string>\b(enum|unchecked_enum_data|init_enum_data_addr|inject_enum_addr|unchecked_take_enum_data_addr|select_enum|select_enum_addr)\b</string>
			<key>name</key>
			<string>keyword.operator.sil.instruction.enums</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Instructions - Protocol and Protocol Composition Types</string>
			<key>match</key>
			<string>\b(init_existential_addr|init_existential_value|deinit_existential_addr|deinit_existential_value|open_existential_addr|open_existential_value|init_existential_ref|open_existential_ref|init_existential_metatype|open_existential_metatype|alloc_existential_box|project_existential_box|open_existential_box|open_existential_box_value|dealloc_existential_box)\b</string>
			<key>name</key>
			<string>keyword.operator.sil.instruction.protocol-and-protocol-composition-types</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Instructions - Blocks</string>
			<key>match</key>
			<string>\b(project_block_storage|init_block_storage_header)\b</string>
			<key>name</key>
			<string>keyword.operator.sil.instruction.blocks</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Instructions - Unchecked Conversions</string>
			<key>match</key>
			<string>\b(upcast|address_to_pointer|pointer_to_address|unchecked_ref_cast|unchecked_ref_cast_addr|unchecked_addr_cast|unchecked_trivial_bit_cast|unchecked_bitwise_cast|unchecked_value_cast|unchecked_ownership_conversion|ref_to_raw_pointer|raw_pointer_to_ref|ref_to_unowned|unowned_to_ref|ref_to_unmanaged|unmanaged_to_ref|convert_function|convert_escape_to_noescape|classify_bridge_object|value_to_bridge_object|ref_to_bridge_object|bridge_object_to_ref|bridge_object_to_word|thin_to_thick_function|thick_to_objc_metatype|objc_to_thick_metatype|objc_metatype_to_object|objc_existential_metatype_to_object)\b</string>
			<key>name</key>
			<string>keyword.operator.sil.instruction.unchecked-conversions</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Instructions - Checked Conversions</string>
			<key>match</key>
			<string>\b(unconditional_checked_cast|unconditional_checked_cast_addr)\b</string>
			<key>name</key>
			<string>keyword.operator.sil.instruction.checked-conversions</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Instructions - Runtime Fails</string>
			<key>match</key>
			<string>\b(cond_fail)\b</string>
			<key>name</key>
			<string>keyword.control.sil.instruction.runtime-failures</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Instructions - Terminators</string>
			<key>match</key>
			<string>\b(unreachable|return|throw|yield|unwind|br|cond_br|switch_value|select_value|switch_enum|switch_enum_addr|dynamic_method_br|checked_cast_br|checked_cast_addr_br|try_apply|await_async_continuation)\b</string>
			<key>name</key>
			<string>keyword.control.sil.instruction.terminators</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Instructions - Differentiable Programming</string>
			<key>match</key>
			<string>\b(differentiable_function|linear_function|differentiable_function_extract|linear_function_extract|differentiability_witness_function)\b</string>
			<key>name</key>
			<string>keyword.operator.sil.instruction.differentiable-programming</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Instructions - Optimizer Dataflow Marker Instructions</string>
			<key>match</key>
			<string>\b(mark_must_check)\b</string>
			<key>name</key>
			<string>keyword.operator.sil.instruction.optimizer-dataflow-marker-instructions</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Instructions - No Implicit Copy and No Escape Value Instructions</string>
			<key>match</key>
			<string>\b(copyable_to_moveonlywrapper|moveonlywrapper_to_copyable)\b</string>
			<key>name</key>
			<string>keyword.operator.sil.instruction.no-implicit-copy-and-no-escape-value-instructions</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Value Name</string>
			<key>match</key>
			<string>%[A-Za-z_0-9]+\b</string>
			<key>name</key>
			<string>variable.other.sil.value-name</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>SIL Function Name</string>
			<key>match</key>
			<string>@(\$?)[A-Za-z_0-9]+\b</string>
			<key>name</key>
			<string>variable.other.sil.function-name</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bundef\b</string>
			<key>name</key>
			<string>invalid.illegal.sil.value</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(void|i\d+\**|half|float|double|fp128|x86_fp80|ppc_fp128|x86mmx|label|metadata)</string>
			<key>name</key>
			<string>storage.type.language.sil</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;!\.)\b(?:associatedtype|let|operator|typealias|var)\b</string>
			<key>name</key>
			<string>keyword.other.sil.swift.declaration-specifier</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;!\.)\b(class|enum|extension|precedencegroup|protocol|struct)\b</string>
			<key>name</key>
			<string>storage.type.$1.sil.swift</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;!\.)\b(?:inout|static|final|lazy|mutating|nonmutating|optional|indirect|required|override|dynamic|convenience|infix|prefix|postfix)\b</string>
			<key>name</key>
			<string>storage.modifier.sil.swift</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\binit[?!]|\binit\b|(?&lt;!\.)\b(?:func|deinit|subscript|didSet|get|set|willSet)\b</string>
			<key>name</key>
			<string>storage.type.sil.swift.function</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;!\.)\b(?:fileprivate|private|internal|public|open)\b</string>
			<key>name</key>
			<string>keyword.other.sil.swift.accessibility.declaration-specifier</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>matches weak, unowned, unowned(safe), unowned(unsafe)</string>
			<key>match</key>
			<string>(?&lt;!\.)\b(?:weak|unowned)\b|\bunowned\((?:safe|unsafe)\)</string>
			<key>name</key>
			<string>keyword.other.sil.swift.capture-specifier</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.type.swift</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.type.metatype.swift</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;=\.)(?:(dynamicType|self)|(Protocol|Type))\b</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;!\.)\bimport\b</string>
			<key>name</key>
			<string>keyword.control.sil.swift.import</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Swift Identifier</string>
			<key>match</key>
			<string>\b[a-z][\w\d\._&lt;&gt;]*|[_][\w\d\._&lt;&gt;]+\b</string>
			<key>name</key>
			<string>support.class.sil.swift.identifier</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Swift Metatype</string>
			<key>match</key>
			<string>\b[A-Z][\w\d\._&lt;&gt;]*|[_][\w\d\._&lt;&gt;]+\b\.Type</string>
			<key>name</key>
			<string>support.class.sil.swift.metatype</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Swift Type</string>
			<key>match</key>
			<string>\b[A-Z][\w\d\._&lt;&gt;]*|[_][\w\d\._&lt;&gt;]+\b</string>
			<key>name</key>
			<string>support.class.sil.swift.type</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b\d+\.\d+\b</string>
			<key>name</key>
			<string>constant.numeric.float.sil</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(\d+|0(x|X)[a-fA-F0-9]+)\b</string>
			<key>name</key>
			<string>constant.numeric.integer.sil</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.sil</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.sil</string>
	<key>uuid</key>
	<string>3271339A-BE22-4700-B864-C9CFA78F9E36</string>
</dict>
</plist>
